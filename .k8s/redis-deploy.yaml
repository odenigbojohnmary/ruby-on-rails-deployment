# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: redis-cluster
# spec:
#   serviceName: redis-cluster
#   replicas: 2
#   selector:
#     matchLabels:
#       app: redis-cluster
#   template:
#     metadata:
#       labels:
#         app: redis-cluster
#     spec:
#       containers:
#       - name: redis
#         image: redis:5.0.1-alpine
#         ports:
#         - containerPort: 6379
#           name: client
#         # - containerPort: 16379
#         #   name: gossip
#         command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
#         env:
#         - name: POD_IP
#           valueFrom:
#             fieldRef:
#               fieldPath: status.podIP
#         volumeMounts:
#         - name: conf
#           mountPath: /conf
#           readOnly: false
#         - name: data
#           mountPath: /data
#           readOnly: false
#       volumes:
#       - name: conf
#         configMap:
#           name: redis-cluster
#           defaultMode: 0777
#   volumeClaimTemplates:
#   - metadata:
#       name: data
#     spec:
#       accessModes: [ "ReadWriteOnce" ]
#       resources:
#         requests:
#           storage: 1Gi

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-ss
  namespace: default
spec:
  serviceName: "redis-service"
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      initContainers:
      - name: init-redis
        image: redis:latest
        command:
        - bash
        - "-c"
        - |
          set -ex
          # Generate redis server-id from pod ordinal index.
          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          # Copy appropriate redis config files from config-map to respective directories.
          if [[ $ordinal -eq 0 ]]; then
            cp /mnt/master.conf /etc/redis-config.conf
          else
            cp /mnt/slave.conf /etc/redis-config.conf
          fi
        volumeMounts:
        - name: redis-claim
          mountPath: /etc
        - name: config-map
          mountPath: /mnt/
      containers:
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
          name: redis-ss
        command:
          - redis-server
          - "/etc/redis-config.conf"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-claim
          mountPath: /etc
      volumes:
      - name: config-map
        configMap:
          name: redis-ss-configuration                  
  volumeClaimTemplates:
  - metadata:
      name: redis-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi